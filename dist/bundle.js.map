{
  "version": 3,
  "sources": [
    "../../../../../../../usr/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "prototypes/coordinate.js",
    "prototypes/node.js",
    "prototypes/quadtree.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict'\nfunction Coordinate(x, y) {\n  this.x = validateCoordinateValue(x);\n  this.y = validateCoordinateValue(y);\n};\nCoordinate.prototype.getX = function() {\n  return this.x;\n};\nCoordinate.prototype.setX = function(newX) {\n  this.x = validateCoordinateValue(newX);\n};\nCoordinate.prototype.getY = function() {\n  return this.y;\n};\nCoordinate.prototype.setY = function(newY) {\n  this.y = validateCoordinateValue(newY);\n};\nfunction validateCoordinateValue(valueToValidate) {\n  if (typeof valueToValidate !== \"number\") {\n    throw new Error(\"Coordinate coordinate must be a number\");\n  }\n  if (valueToValidate < 0) {\n    throw new Error(\"Coordinate coordinate must be grater than zero\");\n  }\n  return valueToValidate;\n};\nmodule.exports = Coordinate;\n",
    "'use strict'\nvar Coordinate = require('./coordinate');\n\nfunction Node(centerCoordinates, halfDimension) {\n  this.centerCoordinates = validatePointValue(centerCoordinates);\n  this.halfDimension = validateHalfDimensionValue(this.centerCoordinates, halfDimension);\n  this.points = [];\n  this.childNodes = [];\n};\n\nNode.prototype.getCenterCoordinates = function() {\n  return this.centerCoordinates;\n};\n\nNode.prototype.setCenterCoordinates = function(newCenterCoordinates) {\n  this.centerCoordinates = validatePointValue(newCenterCoordinates);\n};\nNode.prototype.getCenterCoordinatesX = function() {\n  return this.centerCoordinates.getX();\n}\nNode.prototype.getCenterCoordinatesY = function() {\n  return this.centerCoordinates.getY();\n};\n\nNode.prototype.getHalfDimension = function() {\n  return this.halfDimension;\n};\n\nNode.prototype.setHalfDimension = function(newHalfDimension) {\n  this.halfDimension = validatePointValue(newHalfDimension);\n};\n\nNode.prototype.getHalfDimensionX = function() {\n  return this.halfDimension.getX();\n};\nNode.prototype.getHalfDimensionY = function() {\n  return this.halfDimension.getY();\n};\n\nNode.prototype.getWidth = function() {\n  return this.getHalfDimension().getX() - this.getCenterCoordinates().getX();\n};\n\nNode.prototype.getHeight = function() {\n  return this.getHalfDimension().getY() - this.getCenterCoordinates().getY();\n};\n\nNode.prototype.getPoints = function() {\n  return this.points;\n};\n\nNode.prototype.setPoints = function(newPoints, index) {\n  this.points = validatePointsTableValue(newPoints);\n};\n\nNode.prototype.emptyPoints = function() {\n  this.points = [];\n};\n\nNode.prototype.getLengthOfPoints = function() {\n  return this.getPoints().length;\n};\n\nNode.prototype.isFullOfPoints = function() {\n  return !(this.getLengthOfPoints() < 4);\n};\n\nNode.prototype.isOutOfHalfDimension = function(newPoint) {\n  return (newPoint.getX() < this.getCenterCoordinatesX() ||  newPoint.getY() < this.getCenterCoordinatesY() ||  newPoint.getX() > this.getHalfDimensionX() ||  newPoint.getY() > this.getHalfDimensionY());\n};\n\nNode.prototype.addPointToAllChildNodes = function(point) {\n  this.getChildNodes().forEach(function(childNode, index) {\n    childNode.addPoint(point);\n  });\n};\n\nNode.prototype.addPoint = function(newPoint) {\n  if (this.isOutOfHalfDimension(newPoint)) {\n    return false;\n  }\n  if (this.isFullOfPoints()) {\n    if (this.hasNoChild()) {\n      this.splitInFourNodes();\n    }\n    this.addPointToAllChildNodes(newPoint);\n\n  } else {\n    this.points.push(validatePointValue(newPoint));\n  }\n  return true;\n};\n\nNode.prototype.splitInFourNodes = function() {\n  this.createFourNodes();\n  var _this = this;\n  this.getPoints().forEach(function(point, index) {\n    _this.addPointToAllChildNodes(point);\n  });\n  this.emptyPoints();\n};\n\nNode.prototype.createFourNodes = function() {\n  var halfDimensionX = this.getHalfDimensionX(),\n    halfDimensionY = this.getHalfDimensionY(),\n    centerCoordinatesX = this.getCenterCoordinatesX(),\n    centerCoordinatesY = this.getCenterCoordinatesY(),\n    newCenterCoordinatesX = halfDimensionX / 2,\n    newCenterCoordinatesY = halfDimensionY / 2,\n    newHalfDimensionX = (halfDimensionX - centerCoordinatesX) / 2,\n    newHalfDimensionY = (halfDimensionY - centerCoordinatesY) / 2,\n    newHalfDimension = new Coordinate(newHalfDimensionX, newHalfDimensionY);\n  this.addChildNode(new Node(this.getCenterCoordinates(), newHalfDimension));\n  this.addChildNode(new Node(new Coordinate(newCenterCoordinatesX, centerCoordinatesY), new Coordinate(halfDimensionX, newHalfDimensionY)));\n  this.addChildNode(new Node(new Coordinate(centerCoordinatesX, newCenterCoordinatesY), new Coordinate(newHalfDimensionX, halfDimensionY)));\n  this.addChildNode(new Node(new Coordinate(newCenterCoordinatesX, centerCoordinatesY), this.getHalfDimension()));\n};\nNode.prototype.hasNoChild = function() {\n  return this.getChildNodes().length === 0;\n};\n\nNode.prototype.hasNotToManyChild = function () {\n  return this.getChildNodes().length < 4;\n}\nNode.prototype.getChildNodes = function() {\n  return this.childNodes;\n};\n\nNode.prototype.setChildNodes = function(newChildNodes) {\n  this.childNodes = validateNodesTableValue(newChildNodes);\n};\n\nNode.prototype.addChildNode = function(newChildNode) {\n  if (this.hasNotToManyChild()) {\n    this.childNodes.push(validateNodeValue(newChildNode));\n  } else {\n    throw new Error(\"Node can't have more than 4 child\");\n  }\n};\n\nNode.prototype.toString = function (index, indentation) {\n  if (this.hasNoChild()) {\n    console.log([indentation, indentation, \"Leaf\"].join(\"\"));\n    //console.log(this.getChildNodes());\n  } else {\n    if (!index) {\n      index = 0;\n    }\n    if (!indentation) {\n      indentation = \"\";\n    }\n    index++;\n    indentation = [indentation, \"............\"].join(\"\");\n    this.childNodes[0].toString(index, indentation);\n    this.childNodes[1].toString(index, indentation);\n    console.log([indentation, \"Level \", index].join(\"\"));\n    this.childNodes[2].toString(index, indentation);\n    this.childNodes[3].toString(index, indentation);\n  }\n}\n\nfunction validatePointValue(pointToValidate) {\n  if (!(pointToValidate instanceof Coordinate)) {\n    throw new Error(\"Must be a Coordinate\");\n  }\n  return pointToValidate;\n};\n\nfunction validatePointsTableValue(pointsTableToValidate) {\n  pointsTableToValidate.forEach(function(pointToValidate, index) {\n    validatePointValue(pointToValidate);\n  });\n  return pointsTableToValidate;\n};\n\nfunction validateHalfDimensionValue(centerCoordinatesToCompareWith, halfDimensionToValidate) {\n  halfDimensionToValidate = validatePointValue(halfDimensionToValidate);\n  if (centerCoordinatesToCompareWith.x === halfDimensionToValidate.x || centerCoordinatesToCompareWith.y === halfDimensionToValidate.y) {\n    throw new Error(\"centerCoordinates must be different from halfDimension\");\n  }\n  return halfDimensionToValidate;\n};\n\nfunction validateNodesTableValue(nodesTableToValidate) {\n  nodesTableToValidate.forEach(function(nodeToValidate, index) {\n    validateNodeValue(nodeToValidate);\n  });\n  return nodesTableToValidate;\n};\n\nfunction validateNodeValue(nodeToValidate) {\n  if (!(nodeToValidate instanceof Node)) {\n    throw new Error(\"Must be a Node\");\n  }\n  return nodeToValidate;\n};\nmodule.exports = Node;\n",
    "'use strict'\nvar Node = require('./node'),\n  Coordinate = require('./coordinate');\n\nfunction Quadtree(halfDimensionX, halfDimensionY) {\n  this.originNode = new Node(new Coordinate(0, 0), new Coordinate(halfDimensionX, halfDimensionY));\n  this.points = [];\n};\n\nQuadtree.prototype.getPoints = function () {\n  return this.points;\n};\nQuadtree.prototype.getOriginNode = function () {\n  return this.originNode;\n};\n\nQuadtree.prototype.addPoint = function (newPoint) {\n  if (this.originNode.addPoint(newPoint)){\n    this.points.push(newPoint);\n  }\n};\n\nQuadtree.prototype.toString = function () {\n  console.log(\"Origin Node.........\");\n  this.originNode.toString();\n};\n\nmodule.exports = Quadtree;\n"
  ]
}